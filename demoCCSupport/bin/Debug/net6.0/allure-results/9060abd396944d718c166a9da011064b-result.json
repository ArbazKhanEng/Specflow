{
  "uuid": "1b52510f3d954f04bd73b71da0079960",
  "historyId": "Login to VCC application",
  "fullName": "Login to VCC application",
  "labels": [
    {
      "name": "thread",
      "value": "NonParallelWorker"
    },
    {
      "name": "host",
      "value": "ENG-SMKBKC5RMNB"
    },
    {
      "name": "feature",
      "value": "Feature1"
    },
    {
      "name": "tag",
      "value": "tag1"
    },
    {
      "name": "tag",
      "value": "browser"
    }
  ],
  "links": [],
  "name": "Login to VCC application",
  "status": "broken",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "Interface cannot be resolved: OpenQA.Selenium.IWebDriver",
    "trace": "BoDi.ObjectContainerException: Interface cannot be resolved: OpenQA.Selenium.IWebDriver\r\n   at BoDi.ObjectContainer.TypeRegistration.<>c__DisplayClass3_0.<ResolvePerContext>b__1()\r\n   at BoDi.ObjectContainer.RegistrationWithStrategy.ExecuteWithLock(Object lockObject, Func`1 getter, Func`1 factory, ResolutionList resolutionPath)\r\n   at BoDi.ObjectContainer.TypeRegistration.ResolvePerContext(ObjectContainer container, RegistrationKey keyToResolve, ResolutionList resolutionPath)\r\n   at BoDi.ObjectContainer.RegistrationWithStrategy.Resolve(ObjectContainer container, RegistrationKey keyToResolve, ResolutionList resolutionPath)\r\n   at BoDi.ObjectContainer.ResolveObject(RegistrationKey keyToResolve, ResolutionList resolutionPath)\r\n   at BoDi.ObjectContainer.Resolve(Type typeToResolve, ResolutionList resolutionPath, String name)\r\n   at BoDi.ObjectContainer.Resolve(Type typeToResolve, String name)\r\n   at BoDi.ObjectContainer.Resolve[T](String name)\r\n   at BoDi.ObjectContainer.Resolve[T]()\r\n   at demoCCSupport.Hooks1.AfterScenario() in C:\\Users\\Arbaz.Khan\\source\\repos\\BDD With Specflow Demo\\demoCCSupport\\Hooks1.cs:line 58\r\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\r\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)"
  },
  "stage": "finished",
  "steps": [
    {
      "name": "Given  I am at VCC login page.",
      "status": "skipped",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1680771537282,
      "stop": 1680771537282
    },
    {
      "name": "When  I enter credentials.",
      "status": "skipped",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1680771537282,
      "stop": 1680771537282
    },
    {
      "name": "Then  I get logged in.",
      "status": "skipped",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1680771537282,
      "stop": 1680771537282
    }
  ],
  "attachments": [],
  "parameters": [],
  "start": 1680771537282,
  "stop": 1680771537283
}